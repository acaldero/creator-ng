{
  "name": "CREATOR Assembly",
  "scopeName": "source.assembly",
  "fileTypes": ["s", "asm", "S"],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#labels"
    },
    {
      "include": "#directives"
    },
    {
      "include": "#instructions"
    },
    {
      "include": "#registers"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#strings"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.hash.assembly",
          "match": "#.*$"
        },
        {
          "name": "comment.block.assembly",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "labels": {
      "patterns": [
        {
          "name": "entity.name.function.label.assembly",
          "match": "^\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*:"
        }
      ]
    },
    "directives": {
      "patterns": [
        {
          "name": "keyword.control.directive.assembly",
          "match": "\\.(text|data|bss|section|global|globl|extern|align|ascii|asciiz|byte|half|word|dword|space|include|macro|endmacro|if|endif|else|equ|set)"
        }
      ]
    },
    "instructions": {
      "patterns": [
        {
          "name": "keyword.mnemonic.risc-v.assembly",
          "match": "\\b(add|addi|sub|subi|mul|div|rem|and|andi|or|ori|xor|xori|sll|slli|srl|srli|sra|srai|slt|slti|sltu|sltiu|beq|bne|blt|bge|bltu|bgeu|lb|lh|lw|lbu|lhu|sb|sh|sw|lui|auipc|jal|jalr|ecall|ebreak|nop|mv|li|la|j|jr|ret|call|tail)\\b"
        },
        {
          "name": "keyword.mnemonic.mips.assembly",
          "match": "\\b(add|addi|addiu|addu|and|andi|beq|bne|div|divu|j|jal|jalr|jr|lb|lbu|lh|lhu|lui|lw|mfhi|mflo|mult|multu|nor|or|ori|sb|sh|sll|sllv|slt|slti|sltiu|sltu|sra|srav|srl|srlv|sub|subu|sw|syscall|xor|xori)\\b"
        },
        {
          "name": "keyword.mnemonic.z80.assembly",
          "match": "\\b(ld|st|add|sub|mul|div|and|or|xor|shl|shr|cmp|jmp|jz|jnz|call|ret|push|pop|nop|halt)\\b"
        }
      ]
    },
    "registers": {
      "patterns": [
        {
          "name": "variable.language.register.risc-v.assembly",
          "match": "\\b(x[0-9]|x[12][0-9]|x3[01]|zero|ra|sp|gp|tp|t[0-6]|s[0-9]|s1[01]|a[0-7]|f[0-9]|f[12][0-9]|f3[01]|ft[0-9]|ft1[01]|fs[0-9]|fs1[01]|fa[0-7])\\b"
        },
        {
          "name": "variable.language.register.mips.assembly",
          "match": "\\b(\\$[0-9]|\\$[12][0-9]|\\$3[01]|\\$zero|\\$at|\\$v[01]|\\$a[0-3]|\\$t[0-9]|\\$s[0-7]|\\$k[01]|\\$gp|\\$sp|\\$fp|\\$ra|\\$f[0-9]|\\$f[12][0-9]|\\$f3[01])\\b"
        },
        {
          "name": "variable.language.register.z80.assembly",
          "match": "\\b(a|b|c|d|e|h|l|af|bc|de|hl|sp|ix|iy|pc)\\b"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.assembly",
          "match": "\\b0[xX][0-9a-fA-F]+\\b"
        },
        {
          "name": "constant.numeric.binary.assembly",
          "match": "\\b0[bB][01]+\\b"
        },
        {
          "name": "constant.numeric.octal.assembly",
          "match": "\\b0[0-7]+\\b"
        },
        {
          "name": "constant.numeric.decimal.assembly",
          "match": "\\b[0-9]+\\b"
        },
        {
          "name": "constant.numeric.immediate.assembly",
          "match": "#[0-9]+"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.assembly",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.assembly",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.assembly",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.assembly",
              "match": "\\\\."
            }
          ]
        }
      ]
    }
  }
}
